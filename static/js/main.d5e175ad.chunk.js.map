{"version":3,"sources":["audio/twoTick-clock-sound.wav","helper/timerFunctions.js","components/Stopwatch.js","components/Toggle.js","components/Icons.js","helper/audioController.js","helper/interfaces.js","components/VolumeController.js","components/Countdown.js","App.js","index.js"],"names":["module","exports","stopTimer","this","setState","timerOn","clearInterval","timer","restartTimer","time","timerStart","timerTime","Stopwatch","state","startTimer","Date","now","setInterval","seconds","Math","floor","slice","minutes","hours","className","onClick","bind","Component","Toggle","props","onChange","icons","checked","unchecked","stopwatchIcon","React","createElement","countdownIcon","autoIcon","manualIcon","arrowUp","twoArrowUp","arrowDown","twoArrowDown","AudioController","ready","manager","soundManager","soundCollection","Map","sounds","addSound","id","volume","set","createSound","url","get","hasSound","has","play","setVolume","self","setup","onready","debugMode","twoTick","useStyles","makeStyles","theme","root","height","width","margin","ModyfiedSlider","withStyles","color","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","track","borderRadius","rail","Slider","marks","value","label","VolumeController","classes","orientation","defaultValue","aria-labelledby","onChangeVolume","Countdown","auto","soundSelected","soundVolume","audioController","playSound","changeVolume","event","newVolume","console","newTime","log","timeEnd","renewTimer","adjustTimer","input","toggleAuto","key","App","isStopwatch","changeTimer","ReactDOM","render","document","getElementById"],"mappings":"4FAAAA,EAAOC,QAAU,IAA0B,iD,oMCApC,SAASC,IACZC,KAAKC,SAAU,CAAEC,SAAS,IAC1BC,cAAcH,KAAKI,OAOhB,SAASC,EAAaC,GAC3BN,KAAKC,SAAS,CACVC,SAAS,EACTK,WAAY,EACZC,UAAWF,I,ICwCFG,E,4MAhDbC,MAAQ,CACNR,SAAS,EACTK,WAAY,EACZC,UAAW,G,EAEbG,WAAa,WACX,EAAKV,SAAS,CACZC,SAAS,EACTM,UAAW,EAAKE,MAAMF,UACtBD,WAAYK,KAAKC,MAAQ,EAAKH,MAAMF,YAEtC,EAAKJ,MAAQU,aAAa,WACxB,EAAKb,SAAS,CACZO,UAAWI,KAAKC,MAAS,EAAKH,MAAMH,eAErC,K,uDAGK,IACAC,EAAcR,KAAKU,MAAnBF,UAEJO,GAAW,IAAOC,KAAKC,MAAMT,EAAY,KAAQ,IAAKU,OAAO,GAC7DC,GAAW,IAAOH,KAAKC,MAAMT,EAAY,KAAS,IAAKU,OAAO,GAC9DE,GAAS,IAAMJ,KAAKC,MAAMT,EAAY,OAAUU,OAAO,GAE3D,OACE,yBAAKG,UAAU,aACb,yBAAKA,UAAU,oBAAf,aAEA,yBAAKA,UAAU,qBACZD,EADH,MACaD,EADb,MACyBJ,IAED,IAAvBf,KAAKU,MAAMR,SAA8C,IAAzBF,KAAKU,MAAMF,WAC5C,4BAAQc,QAAStB,KAAKW,YAAtB,UAEwB,IAAvBX,KAAKU,MAAMR,SACV,4BAAQoB,QAASvB,EAAUwB,KAAKvB,OAAhC,SAEsB,IAAvBA,KAAKU,MAAMR,SAAqBF,KAAKU,MAAMF,UAAY,GACtD,4BAAQc,QAAStB,KAAKW,YAAtB,WAEsB,IAAvBX,KAAKU,MAAMR,SAAqBF,KAAKU,MAAMF,UAAY,GACtD,4BAAQc,QAASjB,EAAakB,KAAKvB,KAAM,IAAzC,gB,GA3CcwB,a,iBCcTC,G,6KAXP,OACI,kBAAC,IAAD,CACAJ,UAAWrB,KAAK0B,MAAML,UACtBM,SAAU3B,KAAK0B,MAAMC,SACrBC,MAAO,CACHC,QAAS7B,KAAK0B,MAAME,MAAM,GAC1BE,UAAW9B,KAAK0B,MAAME,MAAM,U,GARvBJ,cCHRO,EAAgBC,IAAMC,cAAc,IAAK,CAACZ,UAAU,0BACpDa,EAAgBF,IAAMC,cAAc,IAAK,CAACZ,UAAU,kCACpDc,EAAWH,IAAMC,cAAc,IAAK,CAACZ,UAAU,6BAC/Ce,EAAaJ,IAAMC,cAAc,IAAK,CAACZ,UAAU,oCACjDgB,EAAUL,IAAMC,cAAc,IAAK,CAACZ,UAAU,4BAC9CiB,EAAaN,IAAMC,cAAc,IAAK,CAACZ,UAAU,sCACjDkB,EAAYP,IAAMC,cAAc,IAAK,CAACZ,UAAU,gCAChDmB,EAAeR,IAAMC,cAAc,IAAK,CAACZ,UAAU,0C,kCCqCjDoB,EAjCX,aAAc,IAAD,gCANbC,OAAQ,EAMK,KALbC,QAAUC,IAAaA,aAKV,KAJbC,gBAAkB,IAAIC,IAIT,KAFbC,OAAS,IAAID,IAEA,KAWbE,SAAW,SAACC,GAAqB,IAAjBC,EAAgB,uDAAP,GAClB,EAAKR,OACJ,EAAKG,gBAAgBM,IAAIF,EAAI,EAAKN,QAAQS,YAAY,CAClDH,GAAIA,EACJI,IAAK,EAAKN,OAAOO,IAAIL,GACrBC,OAAQA,MAhBP,KAoBbK,SAAW,SAACN,GACR,OAAO,EAAKJ,gBAAgBW,IAAIP,IArBvB,KAuBbQ,KAAO,SAACR,GACD,EAAKP,OACJ,EAAKG,gBAAgBS,IAAIL,GAAIQ,QAzBxB,KA4BbC,UAAY,SAACT,EAAIC,GACb,EAAKL,gBAAgBS,IAAIL,GAAIS,UAAUR,IA5BvC,IAAIS,EAAO3D,KACXA,KAAK2C,QAAQiB,MAAM,CACfC,QAAS,WACLF,EAAKjB,OAAQ,GAEjBoB,WAAW,IAEf9D,KAAK+C,OAAOI,IAAI,sBAAuBY,M,GCnB3B,IAAIjB,IAAI,CACxB,CAAC,sBAAsBiB,O,yDCGrBC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJC,OAAO,GACPC,MAAM,GACNC,OAAQ,OAIRC,EAAiBC,YAAW,CAC9BL,KAAM,CACJM,MAAO,QAETC,MAAO,CACLN,OAAQ,GACRC,MAAO,GACPM,gBAAiB,OACjBC,OAAQ,iBACRC,WAAY,EACZC,YAAa,GACb,6BAA8B,CAC5BC,UAAW,YAGfC,MAAO,CACLZ,OAAQ,IACRa,aAAc,EACdR,MAAM,WAERS,KAAM,CACJd,OAAQ,IACRa,aAAc,EACdR,MAAM,UAvBWD,CA2BlBW,KACGC,EAAQ,CACZ,CACEC,MAAO,EACPC,MAAO,kBAAC,IAAD,OAET,CACED,MAAO,IACPC,MAAO,kBAAC,IAAD,QAIE,SAAUC,EAAiB7D,GACtC,IAAM8D,EAAUxB,IAChB,OACI,yBAAK3C,UAAWmE,EAAQrB,MACpB,kBAACI,EAAD,CAAgBkB,YAAY,WACxBC,aAAc,GACdC,kBAAgB,kBAChBP,MAAOA,EACPzD,SAAUD,EAAMkE,kB,IC+EjBC,E,4MA5HbnF,MAAQ,CACNR,SAAS,EACT4F,MAAM,EACNvF,WAAY,EACZC,UAAW,IACXuF,cAAe,sBACfC,YAAa,I,EAGfC,gBAAkB,IAAIA,E,EACtBC,UAAY,WACN,EAAKD,gBAAgB1C,SAAS,EAAK7C,MAAMqF,gBAC3C,EAAKE,gBAAgBjD,SAAS,EAAKtC,MAAMqF,cAAe,EAAKrF,MAAMsF,aAErE,EAAKC,gBAAgBxC,KAAK,EAAK/C,MAAMqF,gB,EAEvCI,aAAe,SAACC,EAAOC,GACrB,EAAKpG,SAAS,CAAC+F,YAAaK,IAC5B,EAAKJ,gBAAgBvC,UAAU,EAAKhD,MAAMqF,cAAeM,I,EAE3D1F,WAAa,WACiB,MAAzB,EAAKD,MAAMF,YAEd8F,QAAQhG,KAAK,SACb,EAAKL,SAAS,CACZC,SAAS,EACTM,UAAW,EAAKE,MAAMF,UACtBD,WAAY,EAAKG,MAAMF,YAEzB,EAAKJ,MAAQU,aAAY,WACvB,IAAMyF,EAAU,EAAK7F,MAAMF,UAAY,GACnC+F,EAAU,IACZ,EAAKtG,SAAS,CACZO,UAAW+F,KAEc,IAApB,EAAK7F,MAAMoF,MAAiB,EAAKpF,MAAMH,WAAa,GAC3D,EAAK2F,YACL,EAAKjG,SAAS,CACVO,UAAW,EAAKE,MAAMH,aAE1B+F,QAAQE,IAAI,WAAaF,QAAQG,QAAQ,UACzCH,QAAQhG,KAAK,WAEb,EAAK4F,YACL/F,cAAc,EAAKC,OACnB,EAAKH,SAAS,CAAEC,SAAS,EAAOM,UAAW,MAC3C8F,QAAQG,QAAQ,YAEjB,M,EAELC,WAAa,WACT,EAAKzG,SAAS,CACZO,UAAW,EAAKE,MAAMH,c,EAI5BoG,YAAc,SAACC,GAAW,IAAD,EACQ,EAAKlG,MAA5BF,EADe,EACfA,UADe,EACJN,UAGL,eAAV0G,GAA0BpG,EAAY,IAF9B,MAGR,EAAKP,SAAS,CAAEO,UAAWA,EAAY,MACpB,eAAVoG,GAA0BpG,EAAY,KAAS,EACxD,EAAKP,SAAS,CAAEO,UAAWA,EAAY,MACpB,eAAVoG,GAA0BpG,EAAY,IANvC,MAOR,EAAKP,SAAS,CAAEO,UAAWA,EAAY,MACpB,eAAVoG,GAA0BpG,EAAY,KAAQ,GACvD,EAAKP,SAAS,CAAEO,UAAWA,EAAY,Q,EAI7CqG,WAAa,WACT,EAAK5G,SAAS,CACV6F,MAAO,EAAKpF,MAAMoF,Q,uDAGhB,IAAD,SAC0C9F,KAAKU,MAA9CR,EADD,EACCA,QAAS4F,EADV,EACUA,KAAMtF,EADhB,EACgBA,UAAWD,EAD3B,EAC2BA,WAE9BQ,GAAW,IAAOC,KAAKC,MAAOT,EAAY,IAAQ,IAAM,IAAKU,OAAO,GACpEC,GAAW,IAAMH,KAAKC,MAAOT,EAAY,IAAS,KAAKU,OAAO,GAElE,OACE,yBAAKG,UAAU,aACb,yBAAKA,UAAU,oBAAf,aAEA,6BACE,yCACA,kBAAC,EAAD,CAAQM,SAAU3B,KAAK6G,WAAYjF,MAAO,CAACO,EAAUC,GAAaf,UAAU,eAC5E,wCAGF,yBAAKA,UAAU,qBACf,4BAAQC,QAAS,kBAAM,EAAKqF,YAAY,gBAAgBrE,GACtD,4BAAQhB,QAAS,kBAAM,EAAKqF,YAAY,gBAAgBtE,GAE1D,yBAAKhB,UAAU,kBACTF,EADN,MACkBJ,GAEhB,4BAAQO,QAAS,kBAAM,EAAKqF,YAAY,gBAAgBnE,GACxD,4BAAQlB,QAAS,kBAAM,EAAKqF,YAAY,gBAAgBpE,KAG7C,IAAZrC,IACmB,IAAfK,GAAoBC,IAAcD,IAC/B,4BAAQc,UAAU,mBAAmBC,QAAStB,KAAKW,YAAnD,UAEK,IAAZT,GAAoBM,GAAa,GAC1B,4BAAQa,UAAU,mBAAmBC,QAASvB,EAAUwB,KAAKvB,OAA7D,SAEK,IAAZE,GACmB,IAAfK,GAAoBA,IAAeC,GAA2B,MAAdA,GAC7C,4BAAQa,UAAU,mBAAmBC,QAAStB,KAAKW,YAAnD,YAEM,IAAZT,IAA+B,IAAT4F,GAAkBtF,GAAa,IAClDD,IAAeC,GAAaD,EAAa,GACtC,CAAC,4BAAQc,UAAU,mBAAmByF,IAAK,EAAGxF,QAAStB,KAAK0G,YAA3D,SACD,4BAASrF,UAAU,mBAAmByF,IAAK,EAAGxF,QAASjB,EAAakB,KAAKvB,KAAM,MAA/E,YAER,kBAACuF,EAAD,CAAkBK,eAAgB5F,KAAKmG,oB,GAxHvB3E,aCkBTuF,E,4MAxBbrG,MAAQ,CACNsG,aAAY,G,EAEdC,YAAc,WACZ,EAAKhH,SAAS,CACZ+G,aAAc,EAAKtG,MAAMsG,e,uDAI3B,OACE,yBAAK3F,UAAU,OACb,kBAAC,EAAD,CAAQM,SAAU3B,KAAKiH,YAAarF,MAAO,CAACG,EAAeG,GAAgBb,UAAU,gBACpFrB,KAAKU,MAAMsG,aACV,kBAAC,EAAD,OAEAhH,KAAKU,MAAMsG,aACX,kBAAC,EAAD,W,GAjBQxF,aCHlB0F,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.d5e175ad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/twoTick-clock-sound.8b0201a8.wav\";","export function stopTimer() {\r\n    this.setState( { timerOn: false } );\r\n    clearInterval(this.timer);\r\n  }\r\nexport function resetTimer(ds) {\r\n    this.setState({\r\n      timerTime: this.state.timerStart\r\n    });\r\n};\r\nexport function restartTimer(time) {\r\n  this.setState({\r\n      timerOn: false,\r\n      timerStart: 0,\r\n      timerTime: time\r\n  })\r\n}","import React, { Component } from \"react\";\r\nimport \"../styles/components.css\";\r\n\r\nimport {stopTimer, restartTimer} from '../helper/timerFunctions.js';\r\nclass Stopwatch extends Component {\r\n  state = {\r\n    timerOn: false,\r\n    timerStart: 0,\r\n    timerTime: 0\r\n  };\r\n  startTimer = () => {\r\n    this.setState({\r\n      timerOn: true,\r\n      timerTime: this.state.timerTime,\r\n      timerStart: Date.now() - this.state.timerTime\r\n    });\r\n    this.timer = setInterval( () => {\r\n      this.setState({\r\n        timerTime: Date.now () - this.state.timerStart\r\n      });\r\n    }, 10);\r\n  };\r\n\r\n  render() {\r\n    const { timerTime } = this.state;\r\n\r\n    let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\r\n    let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\r\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\r\n\r\n    return (\r\n      <div className=\"Stopwatch\">\r\n        <div className=\"Stopwatch-header\">Stopwatch</div>\r\n\r\n        <div className=\"Stopwatch-display\">\r\n          {hours} : {minutes} : {seconds}\r\n        </div>\r\n        {this.state.timerOn === false && this.state.timerTime === 0 && (\r\n        <button onClick={this.startTimer}>Start</button>\r\n        )}\r\n        {this.state.timerOn === true && (\r\n          <button onClick={stopTimer.bind(this)}>Stop</button>\r\n        )}\r\n        {this.state.timerOn === false && this.state.timerTime > 0 && (\r\n          <button onClick={this.startTimer}>Resume</button>\r\n        )}\r\n        {this.state.timerOn === false && this.state.timerTime > 0 && (\r\n          <button onClick={restartTimer.bind(this, 0)}>Restart</button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Stopwatch;","import React, {Component} from 'react';\r\nimport ReactToggle from \"react-toggle\";\r\nimport \"react-toggle/style.css\";\r\nimport \"../styles/components.css\";\r\n\r\nclass Toggle extends Component {\r\n    render(){\r\n        return( \r\n            <ReactToggle \r\n            className={this.props.className}\r\n            onChange={this.props.onChange}\r\n            icons={{\r\n                checked: this.props.icons[0],\r\n                unchecked: this.props.icons[1]\r\n            }}/>\r\n        )\r\n    }\r\n}\r\nexport default Toggle;","import React from 'react';\r\n\r\nexport const stopwatchIcon = React.createElement(\"i\", {className:\"stpwIcon fas fa-clock\"});\r\nexport const countdownIcon = React.createElement(\"i\", {className:\"cntdwIcon fas fa-stopwatch-20\"});\r\nexport const autoIcon = React.createElement(\"i\", {className:\"autoIcon fas fa-undo-alt\"});\r\nexport const manualIcon = React.createElement(\"i\", {className:\"manualIcon fas fa-hourglass-end\"});\r\nexport const arrowUp = React.createElement(\"i\", {className:\"arrowUp fas fa-angle-up\"});\r\nexport const twoArrowUp = React.createElement(\"i\", {className:\"twoArrowUp fas fa-angle-double-up\"});\r\nexport const arrowDown = React.createElement(\"i\", {className:\"arrowDown fas fa-angle-down\"});\r\nexport const twoArrowDown = React.createElement(\"i\", {className:\"twoArrowDown fas fa-angle-double-down\"});","import React, {Component} from 'react';\r\n\r\nimport soundManager from 'soundmanager2';\r\n// import {sounds} from './interfaces';\r\nimport twoTick from '../audio/twoTick-clock-sound.wav';\r\n\r\nclass AudioController {\r\n    ready = false;\r\n    manager = soundManager.soundManager;\r\n    soundCollection = new Map();\r\n\r\n    sounds = new Map();\r\n\r\n    constructor(){\r\n        var self = this;\r\n        this.manager.setup({\r\n            onready: function(){\r\n                self.ready = true;\r\n            },\r\n            debugMode: false\r\n        })\r\n        this.sounds.set(\"twoTick-clock-sound\", twoTick);\r\n            \r\n    }\r\n    addSound = (id, volume = 50) => {\r\n        if(this.ready){\r\n            this.soundCollection.set(id, this.manager.createSound({\r\n                id: id,\r\n                url: this.sounds.get(id),\r\n                volume: volume\r\n            }))\r\n        }\r\n    }\r\n    hasSound = (id) => {\r\n        return this.soundCollection.has(id);\r\n    }\r\n    play = (id) => {\r\n        if(this.ready){\r\n            this.soundCollection.get(id).play();\r\n        }\r\n    }\r\n    setVolume = (id, volume) => {\r\n        this.soundCollection.get(id).setVolume(volume);\r\n    }\r\n}\r\n\r\nexport default AudioController;","import twoTick from '../audio/twoTick-clock-sound.wav';\r\n\r\nexport var sounds = new Map([\r\n    {\"twoTick-clock-sound\":twoTick}\r\n]);\r\n\r\n","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport VolumeDown from '@material-ui/icons/VolumeDown';\r\nimport VolumeUp from '@material-ui/icons/VolumeUp';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      height:75,\r\n      width:20,\r\n      margin: 0\r\n    },\r\n  }));\r\n\r\nconst ModyfiedSlider = withStyles({\r\n    root: {\r\n      color: 'grey'\r\n    },\r\n    thumb: { //Circulo\r\n      height: 13,\r\n      width: 13,\r\n      backgroundColor: '#fff',\r\n      border: '2px solid grey',\r\n      marginTop: -8,\r\n      marginLeft: -12,\r\n      '&:focus, &:hover, &$active': {\r\n        boxShadow: 'inherit',\r\n      },\r\n    },\r\n    track: {\r\n      height: 300,\r\n      borderRadius: 4,\r\n      color:'#afafaf'\r\n    },\r\n    rail: {\r\n      height: 300,\r\n      borderRadius: 4,\r\n      color:'black'\r\n      \r\n    },\r\n\r\n  })(Slider);\r\n  const marks = [\r\n    {\r\n      value: 0,\r\n      label: <VolumeDown />,\r\n    },\r\n    {\r\n      value: 100,\r\n      label: <VolumeUp />,\r\n    },\r\n  ];\r\n\r\nexport default function  VolumeController(props){\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <ModyfiedSlider orientation=\"vertical\"\r\n                defaultValue={40}\r\n                aria-labelledby=\"vertical-slider\"\r\n                marks={marks} \r\n                onChange={props.onChangeVolume}/>\r\n        </div>\r\n    )\r\n}","import React, { Component } from \"react\";\r\nimport \"../styles/components.css\";\r\n\r\nimport Toggle from './Toggle.js';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport {stopTimer, restartTimer} from '../helper/timerFunctions.js';\r\n\r\nimport {autoIcon, manualIcon, arrowUp, twoArrowUp, arrowDown, twoArrowDown} from './Icons.js';\r\n\r\nimport audioController from '../helper/audioController';\r\nimport {sounds} from '../helper/interfaces';\r\n\r\nimport VolumeController from './VolumeController.js';\r\n\r\nclass Countdown extends Component {\r\n  state = {\r\n    timerOn: false,\r\n    auto: false,\r\n    timerStart: 0,\r\n    timerTime: 990,\r\n    soundSelected: \"twoTick-clock-sound\",\r\n    soundVolume: 50\r\n  };\r\n\r\n  audioController = new audioController();\r\n  playSound = () => {\r\n    if(!this.audioController.hasSound(this.state.soundSelected)){\r\n      this.audioController.addSound(this.state.soundSelected, this.state.soundVolume);\r\n    }\r\n    this.audioController.play(this.state.soundSelected);\r\n  };\r\n  changeVolume = (event, newVolume) => {\r\n    this.setState({soundVolume: newVolume});\r\n    this.audioController.setVolume(this.state.soundSelected, newVolume);\r\n  };\r\n  startTimer = () => {\r\n    if(this.state.timerTime === 990) return;\r\n\r\n    console.time(\"timer\");\r\n    this.setState({\r\n      timerOn: true,\r\n      timerTime: this.state.timerTime,\r\n      timerStart: this.state.timerTime\r\n    });\r\n    this.timer = setInterval(() => {\r\n      const newTime = this.state.timerTime - 10;\r\n      if (newTime > 1000) {\r\n        this.setState({\r\n          timerTime: newTime\r\n        });\r\n      }else if(this.state.auto === true && this.state.timerStart > 0){\r\n        this.playSound();\r\n        this.setState({\r\n            timerTime: this.state.timerStart\r\n        });\r\n        console.log(\"Tiempo: \" + console.timeEnd(\"timer\"));\r\n        console.time(\"timer\");\r\n      } else {\r\n        this.playSound();\r\n        clearInterval(this.timer);\r\n        this.setState({ timerOn: false, timerTime: 990 });\r\n        console.timeEnd(\"timer\");\r\n      }\r\n    }, 10);\r\n  };\r\n  renewTimer = () => {\r\n      this.setState({\r\n        timerTime: this.state.timerStart\r\n      });\r\n  };\r\n  \r\n  adjustTimer = (input) => {\r\n    const { timerTime, timerOn } = this.state;\r\n    const max = 216000000;\r\n    if (!timerOn) {\r\n    if (input === \"incMinutes\" && timerTime + 60000 < max) {\r\n        this.setState({ timerTime: timerTime + 60000 });\r\n      } else if (input === \"decMinutes\" && timerTime - 60000 >= 0) {\r\n        this.setState({ timerTime: timerTime - 60000 });\r\n      } else if (input === \"incSeconds\" && timerTime + 1000 < max) {\r\n        this.setState({ timerTime: timerTime + 1000 });\r\n      } else if (input === \"decSeconds\" && timerTime - 1000 >= 0) {\r\n        this.setState({ timerTime: timerTime - 1000 });\r\n      }\r\n    }\r\n  };\r\n  toggleAuto = () => {\r\n      this.setState({\r\n          auto: !this.state.auto\r\n      });\r\n  };\r\n  render() {\r\n    const { timerOn, auto, timerTime, timerStart } = this.state;\r\n\r\n    let seconds = (\"0\" + (Math.floor((timerTime / 1000) % 60) % 60)).slice(-2);\r\n    let minutes = (\"0\" + Math.floor((timerTime / 60000) % 60)).slice(-2);\r\n\r\n    return (\r\n      <div className=\"Countdown\">\r\n        <div className=\"Countdown-header\">Countdown</div>\r\n        \r\n        <div>\r\n          <label>Manual</label>\r\n          <Toggle onChange={this.toggleAuto} icons={[autoIcon, manualIcon]} className=\"toggleAuto\" />\r\n          <label>Auto</label>\r\n        </div>\r\n\r\n        <div className=\"Countdown-display\">\r\n        <button onClick={() => this.adjustTimer(\"incMinutes\")}>{twoArrowUp}</button>\r\n          <button onClick={() => this.adjustTimer(\"incSeconds\")}>{arrowUp}</button>\r\n        \r\n        <div className=\"Countdown-time\">\r\n             {minutes} : {seconds}\r\n        </div>\r\n          <button onClick={() => this.adjustTimer(\"decMinutes\")}>{twoArrowDown}</button>\r\n          <button onClick={() => this.adjustTimer(\"decSeconds\")}>{arrowDown}</button>\r\n        </div>\r\n       \r\n        {timerOn === false &&\r\n            (timerStart === 0 || timerTime === timerStart) && (\r\n                <button className=\"controllerButton\" onClick={this.startTimer}>Start</button>\r\n        )}\r\n        {timerOn === true && timerTime >= 0 && (\r\n                <button className=\"controllerButton\" onClick={stopTimer.bind(this)}>Stop</button>\r\n        )}\r\n        {timerOn === false &&\r\n            (timerStart !== 0 && timerStart !== timerTime && timerTime !== 990) && (\r\n                <button className=\"controllerButton\" onClick={this.startTimer}>Resume</button>\r\n        )}\r\n        {(timerOn === false || (auto === false && timerTime <= 0) ) &&\r\n            (timerStart !== timerTime && timerStart > 0) && \r\n                [<button className=\"controllerButton\" key={0} onClick={this.renewTimer}>Renew</button>,\r\n                <button  className=\"controllerButton\" key={1} onClick={restartTimer.bind(this, 990)}>Restart</button>]\r\n        }\r\n        <VolumeController onChangeVolume={this.changeVolume}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Countdown;","import React, { Component } from \"react\";\nimport './styles/App.css';\nimport Stopwatch from './components/Stopwatch';\nimport Countdown from './components/Countdown';\nimport Toggle from './components/Toggle';\n\nimport {stopwatchIcon, countdownIcon} from './components/Icons.js';\n\nclass App extends Component {\n  state = {\n    isStopwatch:false,\n  }\n  changeTimer = () => {\n    this.setState({\n      isStopwatch: !this.state.isStopwatch\n    })\n  };\n  render(){\n    return (\n      <div className=\"App\">\n        <Toggle onChange={this.changeTimer} icons={[stopwatchIcon, countdownIcon]} className=\"changeTimer\"/>\n        {this.state.isStopwatch && (\n          <Stopwatch />\n        )}\n        {!this.state.isStopwatch && (\n          <Countdown />\n        )}\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/App.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}