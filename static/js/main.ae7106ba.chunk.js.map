{"version":3,"sources":["audio/twoTick-clock-string.wav","audio/twoTick-clock-bassDry.wav","helper/timerFunctions.js","components/Stopwatch.js","components/Toggle.js","components/Icons.js","components/Countdown.js","components/VolumeController.js","components/SoundSelector.js","components/TopPanel.js","helper/audioController.js","App.js","index.js"],"names":["module","exports","stopTimer","this","setState","timerOn","clearInterval","timer","restartTimer","time","timerStart","timerTime","Stopwatch","state","startTimer","Date","now","setInterval","seconds","Math","floor","slice","minutes","hours","className","onClick","bind","Component","Toggle","props","onChange","icons","checked","unchecked","stopwatchIcon","React","createElement","countdownIcon","autoIcon","manualIcon","arrowUp","twoArrowUp","arrowDown","twoArrowDown","Countdown","auto","playSound","audioSettings","console","newTime","log","timeEnd","renewTimer","adjustTimer","input","toggleAuto","key","useStyles","makeStyles","root","height","width","margin","ModyfiedSlider","withStyles","color","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","track","borderRadius","rail","Slider","marks","value","label","VolumeController","classes","orientation","volume","aria-labelledby","onChangeVolume","theme","button","display","spacing","formControl","minWidth","SoundSelector","useState","setSound","open","setOpen","FormControl","InputLabel","id","Select","labelId","onClose","onOpen","soundSelected","event","target","onChangeSound","MenuItem","TopPanel","overflowY","gridTemplateColumns","gridTemplateRows","toggleDrawer","toggleBoolean","type","Drawer","PaperProps","anchor","AudioController","ready","manager","soundManager","soundCollection","Map","sounds","twoTickClockString","twoTickClockBassDry","addSound","set","createSound","url","get","hasSound","has","play","setVolume","sound","self","setup","onready","debugMode","App","isStopwatch","soundVolume","changeTimer","audioController","changeVolume","newVolume","changeSound","newSound","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae7106ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/twoTick-clock-string.8b0201a8.wav\";","module.exports = __webpack_public_path__ + \"static/media/twoTick-clock-bassDry.3c9f3a56.wav\";","export function stopTimer() {\r\n    this.setState( { timerOn: false } );\r\n    clearInterval(this.timer);\r\n  }\r\nexport function resetTimer(ds) {\r\n    this.setState({\r\n      timerTime: this.state.timerStart\r\n    });\r\n};\r\nexport function restartTimer(time) {\r\n  this.setState({\r\n      timerOn: false,\r\n      timerStart: 0,\r\n      timerTime: time\r\n  })\r\n}","import React, { Component } from \"react\";\r\nimport \"../styles/components.css\";\r\n\r\nimport {stopTimer, restartTimer} from '../helper/timerFunctions.js';\r\nclass Stopwatch extends Component {\r\n  state = {\r\n    timerOn: false,\r\n    timerStart: 0,\r\n    timerTime: 0\r\n  };\r\n  startTimer = () => {\r\n    this.setState({\r\n      timerOn: true,\r\n      timerTime: this.state.timerTime,\r\n      timerStart: Date.now() - this.state.timerTime\r\n    });\r\n    this.timer = setInterval( () => {\r\n      this.setState({\r\n        timerTime: Date.now () - this.state.timerStart\r\n      });\r\n    }, 10);\r\n  };\r\n\r\n  render() {\r\n    const { timerTime } = this.state;\r\n\r\n    let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\r\n    let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\r\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\r\n\r\n    return (\r\n      <div className=\"Stopwatch\">\r\n        <div className=\"Stopwatch-header\">Stopwatch</div>\r\n\r\n        <div className=\"Stopwatch-display\">\r\n          {hours} : {minutes} : {seconds}\r\n        </div>\r\n        {this.state.timerOn === false && this.state.timerTime === 0 && (\r\n        <button onClick={this.startTimer}>Start</button>\r\n        )}\r\n        {this.state.timerOn === true && (\r\n          <button onClick={stopTimer.bind(this)}>Stop</button>\r\n        )}\r\n        {this.state.timerOn === false && this.state.timerTime > 0 && (\r\n          <button onClick={this.startTimer}>Resume</button>\r\n        )}\r\n        {this.state.timerOn === false && this.state.timerTime > 0 && (\r\n          <button onClick={restartTimer.bind(this, 0)}>Restart</button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Stopwatch;","import React, {Component} from 'react';\r\nimport ReactToggle from \"react-toggle\";\r\nimport \"react-toggle/style.css\";\r\nimport \"../styles/components.css\";\r\n\r\nclass Toggle extends Component {\r\n    render(){\r\n        return( \r\n            <ReactToggle \r\n            className={this.props.className}\r\n            onChange={this.props.onChange}\r\n            icons={{\r\n                checked: this.props.icons[0],\r\n                unchecked: this.props.icons[1]\r\n            }}/>\r\n        )\r\n    }\r\n}\r\nexport default Toggle;","import React from 'react';\r\n\r\nexport const stopwatchIcon = React.createElement(\"i\", {className:\"stpwIcon fas fa-clock\"});\r\nexport const countdownIcon = React.createElement(\"i\", {className:\"cntdwIcon fas fa-stopwatch-20\"});\r\nexport const autoIcon = React.createElement(\"i\", {className:\"autoIcon fas fa-undo-alt\"});\r\nexport const manualIcon = React.createElement(\"i\", {className:\"manualIcon fas fa-hourglass-end\"});\r\nexport const arrowUp = React.createElement(\"i\", {className:\"arrowUp fas fa-angle-up\"});\r\nexport const twoArrowUp = React.createElement(\"i\", {className:\"twoArrowUp fas fa-angle-double-up\"});\r\nexport const arrowDown = React.createElement(\"i\", {className:\"arrowDown fas fa-angle-down\"});\r\nexport const twoArrowDown = React.createElement(\"i\", {className:\"twoArrowDown fas fa-angle-double-down\"});","import React, { Component } from \"react\";\r\nimport \"../styles/components.css\";\r\n\r\nimport Toggle from './Toggle.js';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport {stopTimer, restartTimer} from '../helper/timerFunctions.js';\r\n\r\nimport {autoIcon, manualIcon, arrowUp, twoArrowUp, arrowDown, twoArrowDown} from './Icons.js';\r\n\r\nclass Countdown extends Component {\r\n  state = {\r\n    timerOn: false,\r\n    auto: false,\r\n    timerStart: 0,\r\n    timerTime: 990\r\n  };\r\n\r\n  playSound = this.props.audioSettings[0];\r\n\r\n  startTimer = () => {\r\n    if(this.state.timerTime === 990) return;\r\n\r\n    console.time(\"timer\");\r\n    this.setState({\r\n      timerOn: true,\r\n      timerTime: this.state.timerTime,\r\n      timerStart: this.state.timerTime\r\n    });\r\n    this.timer = setInterval(() => {\r\n      const newTime = this.state.timerTime - 10;\r\n      if (newTime > 1000) {\r\n        this.setState({\r\n          timerTime: newTime\r\n        });\r\n      }else if(this.state.auto === true && this.state.timerStart > 0){\r\n        this.playSound();\r\n        this.setState({\r\n            timerTime: this.state.timerStart\r\n        });\r\n        console.log(\"Tiempo: \" + console.timeEnd(\"timer\"));\r\n        console.time(\"timer\");\r\n      } else {\r\n        this.playSound();\r\n        clearInterval(this.timer);\r\n        this.setState({ timerOn: false, timerTime: 990 });\r\n        console.timeEnd(\"timer\");\r\n      }\r\n    }, 10);\r\n  };\r\n  renewTimer = () => {\r\n      this.setState({\r\n        timerTime: this.state.timerStart\r\n      });\r\n  };\r\n  \r\n  adjustTimer = (input) => {\r\n    const { timerTime, timerOn } = this.state;\r\n    const max = 216000000;\r\n    if (!timerOn) {\r\n    if (input === \"incMinutes\" && timerTime + 60000 < max) {\r\n        this.setState({ timerTime: timerTime + 60000 });\r\n      } else if (input === \"decMinutes\" && timerTime - 60000 >= 0) {\r\n        this.setState({ timerTime: timerTime - 60000 });\r\n      } else if (input === \"incSeconds\" && timerTime + 1000 < max) {\r\n        this.setState({ timerTime: timerTime + 1000 });\r\n      } else if (input === \"decSeconds\" && timerTime - 1000 >= 0) {\r\n        this.setState({ timerTime: timerTime - 1000 });\r\n      }\r\n    }\r\n  };\r\n  toggleAuto = () => {\r\n      this.setState({\r\n          auto: !this.state.auto\r\n      });\r\n  };\r\n  render() {\r\n    const { timerOn, auto, timerTime, timerStart } = this.state;\r\n\r\n    let seconds = (\"0\" + (Math.floor((timerTime / 1000) % 60) % 60)).slice(-2);\r\n    let minutes = (\"0\" + Math.floor((timerTime / 60000) % 60)).slice(-2);\r\n\r\n    return (\r\n      <div className=\"Countdown\">\r\n        <div className=\"Countdown-header\">Countdown</div>\r\n        \r\n        <div>\r\n          <label>Manual</label>\r\n          <Toggle onChange={this.toggleAuto} icons={[autoIcon, manualIcon]} className=\"toggleAuto\" />\r\n          <label>Loop</label>\r\n        </div>\r\n\r\n        <div className=\"Countdown-display\">\r\n        <button onClick={() => this.adjustTimer(\"incMinutes\")}>{twoArrowUp}</button>\r\n          <button onClick={() => this.adjustTimer(\"incSeconds\")}>{arrowUp}</button>\r\n        \r\n        <div className=\"Countdown-time\">\r\n             {minutes} : {seconds}\r\n        </div>\r\n          <button onClick={() => this.adjustTimer(\"decMinutes\")}>{twoArrowDown}</button>\r\n          <button onClick={() => this.adjustTimer(\"decSeconds\")}>{arrowDown}</button>\r\n        </div>\r\n       \r\n        {timerOn === false &&\r\n            (timerStart === 0 || timerTime === timerStart) && (\r\n                <button className=\"controllerButton\" onClick={this.startTimer}>Start</button>\r\n        )}\r\n        {timerOn === true && timerTime >= 0 && (\r\n                <button className=\"controllerButton\" onClick={stopTimer.bind(this)}>Stop</button>\r\n        )}\r\n        {timerOn === false &&\r\n            (timerStart !== 0 && timerStart !== timerTime && timerTime !== 990) && (\r\n                <button className=\"controllerButton\" onClick={this.startTimer}>Resume</button>\r\n        )}\r\n        {(timerOn === false || (auto === false && timerTime <= 0) ) &&\r\n            (timerStart !== timerTime && timerStart > 0) && \r\n                [<button className=\"controllerButton\" key={0} onClick={this.renewTimer}>Renew</button>,\r\n                <button  className=\"controllerButton\" key={1} onClick={restartTimer.bind(this, 990)}>Restart</button>]\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Countdown;","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport VolumeDown from '@material-ui/icons/VolumeDown';\r\nimport VolumeUp from '@material-ui/icons/VolumeUp';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles( () => ({\r\n    root: {\r\n      height:100,\r\n      width:20,\r\n      margin: '10px 0'\r\n    },\r\n  }));\r\n\r\nconst ModyfiedSlider = withStyles({\r\n    root: {\r\n      color: 'grey'\r\n    },\r\n    thumb: { //Circulo\r\n      height: 13,\r\n      width: 13,\r\n      backgroundColor: '#fff',\r\n      border: '2px solid grey',\r\n      marginTop: -6,\r\n      marginLeft: -12,\r\n      '&:focus, &:hover, &$active': {\r\n        boxShadow: 'inherit',\r\n      },\r\n    },\r\n    track: {\r\n      height: 250,\r\n      borderRadius: 4,\r\n      color:'#afafaf'\r\n    },\r\n    rail: {\r\n      height: 250,\r\n      borderRadius: 4,\r\n      color:'black'\r\n      \r\n    },\r\n  })(Slider);\r\n  const marks = [\r\n    {\r\n      value: 0,\r\n      label: <VolumeDown />,\r\n    },\r\n    {\r\n      value: 100,\r\n      label: <VolumeUp />,\r\n    },\r\n  ];\r\n\r\nexport default function  VolumeController(props){\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <ModyfiedSlider orientation=\"vertical\"\r\n                value={props.volume}\r\n                aria-labelledby=\"vertical-slider\"\r\n                marks={marks} \r\n                onChange={props.onChangeVolume}/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    display: 'block',\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default function SoundSelector(props) {\r\n  const classes = useStyles();\r\n\r\n  const [sound, setSound] = React.useState('');\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    setSound(event.target.value);\r\n    props.onChangeSound(event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"sound-selector\">Sound</InputLabel>\r\n        <Select\r\n            labelId=\"sound-selector\"\r\n            id=\"open-sound-selector\"\r\n            open={open}\r\n            onClose={handleClose}\r\n            onOpen={handleOpen}\r\n            value={ props.soundSelected }\r\n            onChange={handleChange}\r\n        >\r\n          <MenuItem value={\"twoTick-clock-string\"}>Clock-String</MenuItem>\r\n          <MenuItem value={\"twoTick-clock-bassDry\"}>Clock-BassDry</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\n\r\nimport VolumeController from './VolumeController';\r\nimport SoundSelector from './SoundSelector';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nexport default function TopPanel(props) {\r\n\r\n    const useStyles = makeStyles( () => ({\r\n        root: {\r\n            overflowY: 'hidden',\r\n            display: 'grid',\r\n            gridTemplateColumns: '1fr 1fr',\r\n            gridTemplateRows: '100%'\r\n        },\r\n      }));\r\n\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n        open: false\r\n    });\r\n    const toggleDrawer = (toggleBoolean) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n          return;\r\n        }\r\n        setState({ ...state, open: toggleBoolean });\r\n    };\r\n    return (\r\n        <div>\r\n            <button className=\"controllerButton openPanelButton\" onClick={toggleDrawer(true)}>Settings</button>\r\n            \r\n            <Drawer className=\"topDrawer\" \r\n                PaperProps={ { className: classes.root } } \r\n                anchor=\"top\" \r\n                open={state.open} \r\n                onClose={toggleDrawer(false)}>\r\n                    <VolumeController volume={props.volume} onChangeVolume={props.onChangeVolume} />\r\n                    <SoundSelector soundSelected={props.soundSelected} onChangeSound={props.onChangeSound}/>\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}","import soundManager from 'soundmanager2';\r\n\r\nimport twoTickClockString from '../audio/twoTick-clock-string.wav';\r\nimport twoTickClockBassDry from '../audio/twoTick-clock-bassDry.wav';\r\n\r\nexport default class AudioController {\r\n\r\n    ready = false;\r\n    manager = soundManager.soundManager;\r\n    soundCollection = new Map();\r\n    sounds = new Map([\r\n        [\"twoTick-clock-string\", twoTickClockString],\r\n        [\"twoTick-clock-bassDry\", twoTickClockBassDry]\r\n    ]);\r\n\r\n    constructor(soundSelected){\r\n        var self = this;\r\n        this.manager.setup({\r\n            onready: function(){\r\n                self.ready = true;\r\n                self.addSound(soundSelected);\r\n            },\r\n            debugMode: false\r\n        });\r\n    }\r\n    addSound = (id, volume = 50) => {\r\n        if(this.ready){\r\n            this.soundCollection.set(id, this.manager.createSound({\r\n                id: id,\r\n                url: this.sounds.get(id),\r\n                volume: volume\r\n            }))\r\n        }\r\n    }\r\n    hasSound = (id) => {\r\n        return this.soundCollection.has(id);\r\n    }\r\n    play = (id) => {\r\n        if(this.ready){\r\n            if(!this.hasSound(id)){\r\n                this.addSound(id);\r\n              }\r\n            this.soundCollection.get(id).play();\r\n        }\r\n    }\r\n    setVolume = (id, volume) => {\r\n        var sound = this.soundCollection.get(id);\r\n        if(sound){\r\n            sound.setVolume(volume);\r\n        }\r\n    }\r\n}","import React, { Component } from \"react\";\nimport './styles/App.css';\nimport Stopwatch from './components/Stopwatch';\nimport Countdown from './components/Countdown';\nimport Toggle from './components/Toggle';\nimport TopPanel from './components/TopPanel';\n\nimport audioController from './helper/audioController';\n\nimport {stopwatchIcon, countdownIcon} from './components/Icons';\n\n\nclass App extends Component {\n  state = {\n    isStopwatch:false,\n    soundSelected: \"twoTick-clock-string\",\n    soundVolume: 50\n  }\n  changeTimer = () => {\n    this.setState({\n      isStopwatch: !this.state.isStopwatch\n    })\n  };\n\n  audioController = new audioController(this.state.soundSelected);\n\n  changeVolume = (event, newVolume) => {\n    this.setState({soundVolume: newVolume});\n    this.audioController.setVolume(this.state.soundSelected, newVolume);\n  };\n\n  playSound = () => {\n    if(!this.audioController.hasSound(this.state.soundSelected)){\n      this.audioController.addSound(this.state.soundSelected, this.state.soundVolume);\n    }\n    this.audioController.play(this.state.soundSelected);\n  };\n \n  changeSound = (newSound) => {\n    this.setState( {\n      soundSelected: newSound\n    });\n  };\n\n  render(){\n    return (\n      <div className=\"App\">\n        <TopPanel volume={this.state.soundVolume} onChangeVolume={this.changeVolume} \n                  onChangeSound={this.changeSound} soundSelected={this.state.soundSelected}/>\n        <Toggle onChange={this.changeTimer} icons={[stopwatchIcon, countdownIcon]} className=\"changeTimer\"/>\n        {this.state.isStopwatch && (\n          <Stopwatch />\n        )}\n        {!this.state.isStopwatch && (\n          <Countdown audioSettings={[this.playSound]}/>\n        )}\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/App.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}